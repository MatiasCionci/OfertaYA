@page "/productos/create"
@using Microsoft.EntityFrameworkCore
@using SuperOferta.Models
@inject SupermercadoContext context
@inject ServiceRol Servicerol
@inject NavigationManager NavigationManager
@using SuperOferta.Components.Pages.Account.Shared
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Partner")]
<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Producto</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Producto" OnValidSubmit="AddProducto" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="productoid" class="form-label">ProductoId:</label> 
                <InputNumber id="productoid" @bind-Value="Producto.ProductoId" class="form-control" /> 
                <ValidationMessage For="() => Producto.ProductoId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="productoname" class="form-label">ProductoName:</label> 
                <InputText id="productoname" @bind-Value="Producto.ProductoName" class="form-control" /> 
                <ValidationMessage For="() => Producto.ProductoName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="fechacaducidad" class="form-label">FechaCaducidad:</label> 
                <InputDate id="fechacaducidad" @bind-Value="Producto.FechaCaducidad" class="form-control" /> 
                <ValidationMessage For="() => Producto.FechaCaducidad" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="descripcion" class="form-label">Descripcion:</label> 
                <InputText id="descripcion" @bind-Value="Producto.Descripcion" class="form-control" /> 
                <ValidationMessage For="() => Producto.Descripcion" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="categoria" class="form-label">categoria:</label> 
                <InputText id="categoria" @bind-Value="Producto.categoria" class="form-control" /> 
                <ValidationMessage For="() => Producto.categoria" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="imagen" class="form-label">imagen:</label> 
                <InputText id="imagen" @bind-Value="Producto.imagen" class="form-control" /> 
                <ValidationMessage For="() => Producto.imagen" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="supermercadoid" class="form-label">SupermercadoId:</label> 
                <InputNumber id="supermercadoid" @bind-Value="Producto.SupermercadoId" class="form-control" /> 
                <ValidationMessage For="() => Producto.SupermercadoId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/productos">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Producto Producto { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProducto()
    {
       
        context.Productos.Add(Producto);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/productos");
    }
}
