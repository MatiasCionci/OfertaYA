@page "/supermercados/createe"
@using Microsoft.EntityFrameworkCore
@using SuperOferta.Models
@using Microsoft.AspNetCore.Identity
@inject SupermercadoContext context
@inject ServiceRol Servicerol
@inject NavigationManager NavigationManager
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@using SuperOferta.Components.Pages.Account.Shared
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Partner")]

<PageTitle>Create</PageTitle>

<h1>Bienvenido @username</h1>

<h2>Create Supermercado</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Supermercado" OnValidSubmit="AddSupermercado" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="supermercadoname" class="form-label">SupermercadoName:</label> 
                <InputText id="supermercadoname" @bind-Value="Supermercado.SupermercadoName" class="form-control" /> 
                <ValidationMessage For="() => Supermercado.SupermercadoName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="direccion" class="form-label">Direccion:</label> 
                <InputText id="direccion" @bind-Value="Supermercado.Direccion" class="form-control" /> 
                <ValidationMessage For="() => Supermercado.Direccion" class="text-danger" /> 
            </div>        
     
           
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/supermercados">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Supermercado Supermercado { get; set; } = new();

    private IdentityUser user = default!;
    private string? username;

    private NotificacionesAdmin NotificacionesAdmin { get; set; } = new();

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;


    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddSupermercado()
    {
        Supermercado.Correo = user.Email;
        context.Supermercados.Add(Supermercado);
        await context.SaveChangesAsync();
        user.PhoneNumber = "3";
        var result= await UserManager.SetPhoneNumberAsync(user,"3");

        NotificacionesAdmin.EmailPartner = user.Email;
        NotificacionesAdmin.Direccion = Supermercado.Direccion;
        context.NotificacionesAdmin.Add(NotificacionesAdmin);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/supermercados");
    }
    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);


    }
}
