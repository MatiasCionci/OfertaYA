@page "/productos/create/{supermercadoId}"
@using Microsoft.EntityFrameworkCore
@using SuperOferta.Models
@inject SupermercadoContext context
@inject NavigationManager NavigationManager
@inject ISupermercadoService SupermercadoService
@rendermode InteractiveServer
<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Producto</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Producto" OnValidSubmit="AddProducto" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="productoname" class="form-label">ProductoName:</label>
                <InputText id="productoname" @bind-Value="Producto.ProductoName" class="form-control" />
                <ValidationMessage For="() => Producto.ProductoName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="fechacaducidad" class="form-label">FechaCaducidad:</label>
                <InputDate id="fechacaducidad" @bind-Value="Producto.FechaCaducidad" class="form-control" />
                <ValidationMessage For="() => Producto.FechaCaducidad" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="precio" class="form-label">Precio:</label>
                <InputNumber id="precio" @bind-Value="Producto.Precio" class="form-control" />
                <ValidationMessage For="() => Producto.Precio" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="descripcion" class="form-label">Descripcion:</label>
                <InputText id="descripcion" @bind-Value="Producto.Descripcion" class="form-control" />
                <ValidationMessage For="() => Producto.Descripcion" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="categoria" class="form-label">categoria:</label>

                <InputSelect id="categorias" @bind-Value="Seleccionada" class="form-control">
                    <option value="">-- Seleccionar --</option>
                    @foreach (var opcion in categorias)
                    {
                        <option value="@opcion">@opcion</option>
                    }
                </InputSelect>

            </div>
            <p>Opción seleccionada: @Seleccionada</p>
            <div class="mb-3">
                <label for="imagen" class="form-label">imagen:</label>
                <InputText id="imagen" @bind-Value="Producto.imagen" class="form-control" />
                <ValidationMessage For="() => Producto.imagen" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/productos">Back to List</a>
</div>

@code {

    [Parameter]
    public string? supermercadoId { get; set; }
    [SupplyParameterFromForm]
    private Producto Producto { get; set; } = new();

    public Supermercado? supermercado { get; set; }
    private List<string> categorias = new();
    //private List<string> Opciones = new List<string> { "Opción 1", "Opción 2", "Opción 3" };
    private string Seleccionada;

    protected override async Task OnInitializedAsync()
    {
        supermercado = await context.Supermercados.FindAsync(int.Parse(supermercadoId));

        categorias.Add("Gaseosa");
        categorias.Add("Lacteos");
        categorias.Add("Cerveza");
        categorias.Add("Vino");
        categorias.Add("Carne");


    }

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProducto()
    {
        Producto.categoria = Seleccionada;
        supermercado.Productos.Add(Producto);
        await SupermercadoService.updateSupermercado(supermercado);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/panellpartner");

    }
}